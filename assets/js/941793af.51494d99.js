"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[4465],{19365:(e,t,a)=>{a.d(t,{A:()=>r});var n=a(96540),o=a(40870);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.A)(i.tabItem,r),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>w});var n=a(58168),o=a(96540),i=a(40870),r=a(23104),l=a(56347),s=a(57485),u=a(31682),c=a(89466);function m(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:o}}=e;return{value:t,label:a,attributes:n,default:o}}))}function d(e){const{values:t,children:a}=e;return(0,o.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(i),(0,o.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=d(e),[r,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[s,u]=g({queryString:a,groupId:n}),[m,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,c.Dv)(a);return[n,(0,o.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),y=(()=>{const e=s??m;return p({value:e,tabValues:i})?e:null})();(0,o.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,i]),tabValues:i}}var y=a(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,r.a_)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(m(t),s(n))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:r}=e;return o.createElement("li",(0,n.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:d},r,{className:(0,i.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":l===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=h(e);return o.createElement("div",{className:(0,i.A)("tabs-container",f.tabList)},o.createElement(b,(0,n.A)({},e,t)),o.createElement(v,(0,n.A)({},e,t)))}function w(e){const t=(0,y.A)();return o.createElement(k,(0,n.A)({key:String(t)},e))}},81257:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>y,frontMatter:()=>u,metadata:()=>m,toc:()=>p});var n=a(58168),o=(a(96540),a(15680)),i=(a(41873),a(11470)),r=a(19365),l=a(16151),s=a.n(l);const u={},c="Okta Overview",m={unversionedId:"getting-started/okta/okta-overview",id:"getting-started/okta/okta-overview",title:"Okta Overview",description:"MilMove has two domains set up with Okta - one that serves the testing applications and one that serves the production application.",source:"@site/docs/getting-started/okta/00-okta-overview.md",sourceDirName:"getting-started/okta",slug:"/getting-started/okta/okta-overview",permalink:"/mymove-docs/docs/getting-started/okta/okta-overview",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/getting-started/okta/00-okta-overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"gettingStartedSidebar",previous:{title:"Okta",permalink:"/mymove-docs/docs/getting-started/okta/"},next:{title:"Okta Admins",permalink:"/mymove-docs/docs/getting-started/okta/okta-admins"}},d={},p=[{value:"Getting an Okta account",id:"getting-an-okta-account",level:2}],g={toc:p},h="wrapper";function y(e){let{components:t,...a}=e;return(0,o.yg)(h,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"okta-overview"},"Okta Overview"),(0,o.yg)("p",null,"MilMove has two domains set up with Okta - one that serves the ",(0,o.yg)("strong",{parentName:"p"},"testing")," applications and one that serves the ",(0,o.yg)("strong",{parentName:"p"},"production")," application.",(0,o.yg)("br",null)),(0,o.yg)("admonition",{title:"Okta Testing Domain",type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("inlineCode",{parentName:"p"},"https://test-milmove.okta.mil"),"\nwhich serves the dev, exp, loadtest, demo, and stg environments.")),(0,o.yg)("admonition",{title:"Okta Production Domain",type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("inlineCode",{parentName:"p"},"https://milmove.okta.mil"),"\nwhich ONLY serves the prd environment.")),(0,o.yg)("p",null,"In order for a customer, office, or admin user to log into MilMove, they ",(0,o.yg)("em",{parentName:"p"},"MUST")," have an Okta account. If they do not have an Okta account, they will be denied access to the application and returned back to the ",(0,o.yg)("inlineCode",{parentName:"p"},"/sign-in")," page and will not be allowed to access the MilMove application.",(0,o.yg)("br",null)),(0,o.yg)("h2",{id:"getting-an-okta-account"},"Getting an Okta account"),(0,o.yg)("p",null,"Customers and Office/Admin users get Okta accounts in different ways. See below:"),(0,o.yg)(i.A,{mdxType:"Tabs"},(0,o.yg)(r.A,{label:"Customers",value:"customers",default:!0,mdxType:"TabItem"},"MilMove Customers can self-register. If they do not have an Okta account when creating a move, they can sign-up when MilMove sends them to Okta for authentication."),(0,o.yg)(r.A,{label:"Office",value:"office",mdxType:"TabItem"},"MilMove Office users will not be able to self-register and will require an account to be created by an Okta Admin with a CSV file import by an Okta Admin. It is crucial to ensure that the office user's DoDID/EDIPI is accurate when being imported."),(0,o.yg)(r.A,{label:"Admin",value:"admin",mdxType:"TabItem"},"MilMove Admin users will not be able to self-register and will require an account to be created by an Okta Admin with a CSV file import or manual creation of the user by an Okta Admin. It is crucial to ensure that the office user's DoDID/EDIPI is accurate when being imported.")),(0,o.yg)("h1",{id:"authenticating-with-okta"},"Authenticating with Okta"),(0,o.yg)("p",null,"Customers and Office/Admin users have different authentication methods, meaning they can sign into Okta differently. See below:"),(0,o.yg)(i.A,{mdxType:"Tabs"},(0,o.yg)(r.A,{label:"Customers",value:"customers",default:!0,mdxType:"TabItem"},"MilMove Customers can sign in with two factors. Okta will allow for ",(0,o.yg)("b",null,"email"),", ",(0,o.yg)("b",null,"password"),", ",(0,o.yg)("b",null,"Okta Verify OTP or Push Notification"),", ",(0,o.yg)("b",null,"Google Authenticator"),", or they can sign in with their ",(0,o.yg)("b",null,"CAC")," but only if their profile contains their DoDID/EDIPI number."),(0,o.yg)(r.A,{label:"Office",value:"office",mdxType:"TabItem"},"MilMove Office users will only be able to sign in with their Smart Card. This can be a CAC or PIV, but an Okta Admin will need to ensure that their DoDID/EDIPI number is up to date and accurate."),(0,o.yg)(r.A,{label:"Admin",value:"admin",mdxType:"TabItem"},"MilMove Office users will only be able to sign in with their Smart Card. This can be a CAC or PIV, but an Okta Admin will need to ensure that their DoDID/EDIPI number is up to date and accurate.")),(0,o.yg)("h1",{id:"okta-groups"},"Okta Groups"),(0,o.yg)("p",null,"When a user authenticates with Okta, there is an additional check that is done to allow access to an application. The user must be a part of the application's respective group in Okta. If the user is not a part of that group in Okta, then they will be denied access. When customers self-register they are ",(0,o.yg)("strong",{parentName:"p"},"automatically")," assigned to the respective Customer group, but ",(0,o.yg)("em",{parentName:"p"},"Office & Admin")," users are assigned to their group during the ",(0,o.yg)("a",{parentName:"p",href:"/mymove-docs/docs/getting-started/okta/csv-import"},"CSV import"),". See the following groups in Okta and which applications they grant access to:"),(0,o.yg)("admonition",{title:"Okta groups matter",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"A user will not be allowed to access any Customer MilMove application if they are assigned to an Admin or Office group in Okta. In the rare case an office user will need to register as a customer, they will need to use a different email address and create a separate Okta account to access the Customer MilMove application.")),(0,o.yg)(i.A,{mdxType:"Tabs"},(0,o.yg)(r.A,{label:"Dev",value:"dev",default:!0,mdxType:"TabItem"},(0,o.yg)(s(),{mdxType:"CodeBlock"},"https://test-milmove.okta.mil",(0,o.yg)("br",null),"'Dev - Customer' -> http://milmovelocal:3000",(0,o.yg)("br",null),"'Dev - Office' -> http://officelocal:3000",(0,o.yg)("br",null),"'Dev - Admin' -> http://adminlocal:3000")),(0,o.yg)(r.A,{label:"Exp",value:"exp",mdxType:"TabItem"},(0,o.yg)(s(),{mdxType:"CodeBlock"},"https://test-milmove.okta.mil",(0,o.yg)("br",null),"'Exp - Customer' -> https://my.exp.dp3.us/",(0,o.yg)("br",null),"'Exp - Office' -> https://office.exp.dp3.us/",(0,o.yg)("br",null),"'Exp - Admin' -> https://admin.exp.dp3.us/")),(0,o.yg)(r.A,{label:"Loadtest",value:"loadtest",mdxType:"TabItem"},(0,o.yg)(s(),{mdxType:"CodeBlock"},"https://test-milmove.okta.mil",(0,o.yg)("br",null),"'Exp - Customer' -> https://my.loadtest.dp3.us/",(0,o.yg)("br",null),"'Exp - Office' -> https://my.loadtest.dp3.us/",(0,o.yg)("br",null),"'Exp - Admin' -> https://my.loadtest.dp3.us/")),(0,o.yg)(r.A,{label:"Demo",value:"demo",mdxType:"TabItem"},(0,o.yg)(s(),{mdxType:"CodeBlock"},"https://test-milmove.okta.mil",(0,o.yg)("br",null),"'Exp - Customer' -> https://my.demo.dp3.us/",(0,o.yg)("br",null),"'Exp - Office' -> https://office.demo.dp3.us/",(0,o.yg)("br",null),"'Exp - Admin' -> https://admin.demo.dp3.us/")),(0,o.yg)(r.A,{label:"Staging",value:"stg",mdxType:"TabItem"},(0,o.yg)(s(),{mdxType:"CodeBlock"},"https://test-milmove.okta.mil",(0,o.yg)("br",null),"'Stage - Customer' -> https://my.stg.move.mil/",(0,o.yg)("br",null),"'Stage - Office' -> https://office.stg.move.mil/",(0,o.yg)("br",null),"'Stage - Admin' -> https://admin.stg.move.mil/")),(0,o.yg)(r.A,{label:"Prod",value:"prd",mdxType:"TabItem"},(0,o.yg)(s(),{mdxType:"CodeBlock"},"https://milmove.okta.mil",(0,o.yg)("br",null),"'MilMove - Customer' -> https://my.move.mil/",(0,o.yg)("br",null),"'MilMove - Office' -> https://office.move.mil/",(0,o.yg)("br",null),"'MilMove - Admin' -> https://admin.move.mil/"))),(0,o.yg)("h1",{id:"successful-flow-with-okta"},"Successful Flow with Okta"),(0,o.yg)("p",null,"A successful authentication with Okta for any user will look like this:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"User goes to the MilMove application"),(0,o.yg)("li",{parentName:"ol"},"User clicks the ",(0,o.yg)("strong",{parentName:"li"},"Accept Terms")," button and is directed to Okta to log in/register"),(0,o.yg)("li",{parentName:"ol"},"If a customer, they sign in with their username in an email format and their two authenticating factors",(0,o.yg)("br",null),"\nIf an office/admin, they will click the ",(0,o.yg)("strong",{parentName:"li"},"Sign in with CAC/PIV")," box, select their certificate, and enter their PIN."),(0,o.yg)("li",{parentName:"ol"},"Okta will find the user based on their entered credentials"),(0,o.yg)("li",{parentName:"ol"},"Okta will make sure that they are assigned to the group that allows access to the application they were directed from"),(0,o.yg)("li",{parentName:"ol"},"If they are, they'll send them back to MilMove successfully where they can access the MilMove application")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"If there are any issues during these steps, you can find some troubleshooting help ",(0,o.yg)("a",{parentName:"strong",href:"/mymove-docs/docs/getting-started/okta/okta-troubleshooting"},"HERE"))))}y.isMDXComponent=!0}}]);