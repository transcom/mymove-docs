"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[1373],{77077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));n(8209);const o={},s="Server",i={unversionedId:"about/application-setup/run-the-app/server",id:"about/application-setup/run-the-app/server",title:"Server",description:"This step installs dependencies, then builds and runs the server using gin, which is a hot reloading go server.",source:"@site/docs/about/application-setup/05-run-the-app/01-server.md",sourceDirName:"about/application-setup/05-run-the-app",slug:"/about/application-setup/run-the-app/server",permalink:"/mymove-docs/docs/about/application-setup/run-the-app/server",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/about/application-setup/05-run-the-app/01-server.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"aboutSidebar",previous:{title:"Run the app",permalink:"/mymove-docs/docs/about/application-setup/run-the-app/"},next:{title:"MilMove Local Client",permalink:"/mymove-docs/docs/about/application-setup/run-the-app/milmove-local-client"}},l={},p=[{value:"Server Dependencies",id:"server-dependencies",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"server"},"Server"),(0,r.kt)("p",null,"This step installs dependencies, then builds and runs the server using ",(0,r.kt)("inlineCode",{parentName:"p"},"gin"),", which is a hot reloading go server.\nIt will listen on port ",(0,r.kt)("inlineCode",{parentName:"p"},"8080")," and will rebuild the actual server any time a go file changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,r.kt)("p",null,"To have hot reloading of the entire application (at least for the customer side), pair the above with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,r.kt)("p",null,"In rare cases, you may want to run the server standalone, in which case you can run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run_standalone\n")),(0,r.kt)("p",null,"This will build both the client and the server and this invocation can be relied upon to be serving the client JS on\nits own rather than relying on webpack doing so. You can run this without running ",(0,r.kt)("inlineCode",{parentName:"p"},"make client_run")," and the whole app\nshould work."),(0,r.kt)("h2",{id:"server-dependencies"},"Server Dependencies"),(0,r.kt)("p",null,"Dependencies are managed by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/Modules"},"go modules"),". New dependencies are automatically\ndetected in import statements and added to ",(0,r.kt)("inlineCode",{parentName:"p"},"go.mod")," when you run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"go build\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"go run\n")),(0,r.kt)("p",null,"You can also manually edit ",(0,r.kt)("inlineCode",{parentName:"p"},"go.mod")," as needed."),(0,r.kt)("p",null,"If you need to add a Go-based tool dependency that is otherwise not imported by our code, import it in\n",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/tools/tools.go"),"."),(0,r.kt)("p",null,"After importing ",(0,r.kt)("em",{parentName:"p"},"any")," go dependency it's a good practice to run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"go mod tidy\n")),(0,r.kt)("p",null,"which prunes unused dependencies and calculates dependency requirements for all possible system architectures."))}c.isMDXComponent=!0}}]);