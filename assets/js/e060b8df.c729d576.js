"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[1710],{13627:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var n=o(87462),i=(o(67294),o(3905));o(8209);const a={sidebar_position:7},s="Icons",r={unversionedId:"frontend/guides/icons",id:"frontend/guides/icons",title:"Icons",description:"MilMove takes the majority of its icons from Font Awesome, and uses react-fontawesome in order to be able to easily render FontAwesome icons in React. We are using the library implementation described here, so there is a src/icons.js file that initializes all of the icons, and is included in the app entry point (as well as Storybook and Jest config files).",source:"@site/docs/frontend/guides/icons.md",sourceDirName:"frontend/guides",slug:"/frontend/guides/icons",permalink:"/mymove-docs/docs/frontend/guides/icons",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/frontend/guides/icons.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"frontendSidebar",previous:{title:"How To Store UI State in Redux",permalink:"/mymove-docs/docs/frontend/guides/store-ui-state-in-redux"},next:{title:"React forms using Formik",permalink:"/mymove-docs/docs/frontend/guides/react-forms-using-formik"}},d={},l=[{value:"Using Existing Icons",id:"using-existing-icons",level:2},{value:"Adding New Icons",id:"adding-new-icons",level:2}],c={toc:l},m="wrapper";function p(e){let{components:t,...o}=e;return(0,i.kt)(m,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"icons"},"Icons"),(0,i.kt)("p",null,"MilMove takes the majority of its icons from ",(0,i.kt)("a",{parentName:"p",href:"https://fontawesome.com/"},"Font Awesome"),", and uses ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/FortAwesome/react-fontawesome"},"react-fontawesome")," in order to be able to easily render FontAwesome icons in React. We are using the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/FortAwesome/react-fontawesome#build-a-library-to-reference-icons-throughout-your-app-more-conveniently"},"library implementation described here"),", so there is a ",(0,i.kt)("inlineCode",{parentName:"p"},"src/icons.js")," file that initializes all of the icons, and is included in the app entry point (as well as Storybook and Jest config files)."),(0,i.kt)("h2",{id:"using-existing-icons"},"Using Existing Icons"),(0,i.kt)("p",null,"To view icons we have already added, you can view the ",(0,i.kt)("a",{parentName:"p",href:"https://storybook.dp3.us/?path=/story/global-icons--all"},"Global > Icons page in Storybook"),". Each icon is annotated with the ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," prop value needed to use that icon."),(0,i.kt)("p",null,"Since we have set up the react-fontawesome icon library, you don't need to import individual icons into a component in order to use them. All you need to do is import the ",(0,i.kt)("inlineCode",{parentName:"p"},"FontAwesomeIcon")," component (if it's not already imported), and use it with the correct ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," prop (usually the icon name as a string, in snake-case and without the ",(0,i.kt)("inlineCode",{parentName:"p"},"fa")," prefix):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n<FontAwesomeIcon icon=\"file\" />\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"You may notice some icons have an ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," prop that is an array, where the first item is a FontAwesome icon set prefix, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"far"),". That's to indicate the icon belongs to the ",(0,i.kt)("inlineCode",{parentName:"p"},"free-regular-svg-icons")," bundle, instead of the ",(0,i.kt)("inlineCode",{parentName:"p"},"free-solid-svg-icons")," (which is the default). More about the ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," prop can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/FortAwesome/react-fontawesome#build-a-library-to-reference-icons-throughout-your-app-more-conveniently"},"here"),".")),(0,i.kt)("p",null,"react-fontawesome lets you do some basic customization using props, like change the size and orientation. See full documentation ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/FortAwesome/react-fontawesome#features"},"here"),". Color is set using the ",(0,i.kt)("inlineCode",{parentName:"p"},"color")," CSS property (since the icons are rendered as SVG, they can be styled using CSS as well)."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"You do ",(0,i.kt)("em",{parentName:"p"},"not")," need to add additional FontAwesome CSS classes (such as ",(0,i.kt)("inlineCode",{parentName:"p"},"fa"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"far"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fa-sort"),") to the component.")),(0,i.kt)("h2",{id:"adding-new-icons"},"Adding New Icons"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Find the icon you want to add by searching at ",(0,i.kt)("a",{parentName:"li",href:"https://fontawesome.com/icons?d=gallery"},"https://fontawesome.com/icons?d=gallery"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Only the ",(0,i.kt)("inlineCode",{parentName:"p"},"free-solid-svg-icons")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"free-regular-svg-icons"),' sets are included in this project. When you search, make sure to filter by "Free", "Solid" and "Regular".')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Add the icon using its name to ",(0,i.kt)("inlineCode",{parentName:"li"},"src/icons.js"),". The icon should be imported from the corresponding @fortawesome package (either ",(0,i.kt)("inlineCode",{parentName:"li"},"free-solid-svg-icons")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"free-regular-svg-icons"),"), and then added to the list of icons passed into ",(0,i.kt)("inlineCode",{parentName:"li"},"library.add()"),". It should be prefixed with ",(0,i.kt)("inlineCode",{parentName:"li"},"fa")," and camelCased. For example, to add ",(0,i.kt)("a",{parentName:"li",href:"https://fontawesome.com/icons/air-freshener?style=solid"},"air-freshener"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"// src/icons.js\n\n  import {\n    // other existing icons...\n+   faAirFreshener,\n  } from '@fortawesome/free-solid-svg-icons'\n\n  library.add(\n    // other existing icons...\n+   faAirFreshener\n  )\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Also see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/FortAwesome/react-fontawesome#how-do-i-import-the-same-icon-from-two-different-styles"},'"How do I import the same icon from two different styles"'))),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Add an example of the icon to the Icons Storybook page (",(0,i.kt)("inlineCode",{parentName:"li"},"src/stories/icons.stories.jsx"),").")))}p.isMDXComponent=!0}}]);