"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[9686],{89694:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(87462),i=(a(67294),a(3905));a(8209);const o={sidebar_position:23},r="History and Audit Logging Guide",s={unversionedId:"backend/guides/guide-to-history-and-audit-logging",id:"backend/guides/guide-to-history-and-audit-logging",title:"History and Audit Logging Guide",description:"Tracking Event History from End to End",source:"@site/docs/backend/guides/guide-to-history-and-audit-logging.md",sourceDirName:"backend/guides",slug:"/backend/guides/guide-to-history-and-audit-logging",permalink:"/mymove-docs/docs/backend/guides/guide-to-history-and-audit-logging",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/backend/guides/guide-to-history-and-audit-logging.md",tags:[],version:"current",sidebarPosition:23,frontMatter:{sidebar_position:23},sidebar:"backendSidebar",previous:{title:"Debugging SQL Tests",permalink:"/mymove-docs/docs/backend/guides/debugging-sql-tests"},next:{title:"Open Telemetry",permalink:"/mymove-docs/docs/backend/guides/open-telemetry"}},d={},l=[{value:"Tracking Event History from End to End",id:"tracking-event-history-from-end-to-end",level:2},{value:"Database Triggers",id:"database-triggers",level:3},{value:"AppContext in Context",id:"appcontext-in-context",level:3},{value:"Move History Fetcher",id:"move-history-fetcher",level:3},{value:"Frontend Event Templates",id:"frontend-event-templates",level:3}],p={toc:l},g="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(g,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"history-and-audit-logging-guide"},"History and Audit Logging Guide"),(0,i.kt)("h2",{id:"tracking-event-history-from-end-to-end"},"Tracking Event History from End to End"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#database-triggers"},"Database Triggers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#appcontext-in-context"},"AppContext")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#move-history-fetcher"},"Fetcher")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#frontend-event-templates"},"Frontend"))),(0,i.kt)("h3",{id:"database-triggers"},"Database Triggers"),(0,i.kt)("p",null,"Move history events are created by ",(0,i.kt)("a",{parentName:"p",href:"/docs/backend/guides/how-to/add-an-event-trigger/"},"Event Triggers")," and are collected in a single \ud83d\udd12",(0,i.kt)("a",{parentName:"p",href:"https://dp3.atlassian.net/wiki/spaces/MT/pages/1634992192/PO9+Technical+Implementation"},"move history table")," which captures what event took place, what data changed, and which user initiated the event. "),(0,i.kt)("p",null,"To add history logging to new or untracked tables, create a new ",(0,i.kt)("a",{parentName:"p",href:"/docs/backend/setup/database-migrations/#creating-migrations"},"migration script")," (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/pull/9422"},"example"),")"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Some things to be aware of regarding history records:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Events initiated by the system are logged as null users"),(0,i.kt)("li",{parentName:"ul"},"Changed data is stored as a JSON string, and to date all data is saved as strings regardless of initial data type"))),(0,i.kt)("h3",{id:"appcontext-in-context"},"AppContext in Context"),(0,i.kt)("p",null,"Move history utilizes ",(0,i.kt)("a",{parentName:"p",href:"/docs/backend/guides/use-stateless-services-with-app-context/"},"AppContext")," to capture user information about an event. Any new endpoints added should adhere to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/guides/guide-to-creating-an-endpoint/#anatomy-of-a-handler"},"auditable app context")," pattern in order to correctly capture event information."),(0,i.kt)("h3",{id:"move-history-fetcher"},"Move History Fetcher"),(0,i.kt)("p",null,"The heavy lifting of the Move History Fetcher is done in the raw SQL query."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"References:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"\ud83d\udd12 ",(0,i.kt)("a",{parentName:"li",href:"https://dp3.atlassian.net/wiki/spaces/MT/pages/1634992192/PO9+Technical+Implementation"},"Technical Implementation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/adrs/using-templates-for-sql-queries"},"SQL Templating")))),(0,i.kt)("h3",{id:"frontend-event-templates"},"Frontend Event Templates"),(0,i.kt)("p",null,"On the frontend, move events are displayed based on design requirements and ",(0,i.kt)("a",{parentName:"p",href:"/docs/adrs/move-history-events"},"event type"),". Templates are organized based on ",(0,i.kt)("a",{parentName:"p",href:"/docs/adrs/move-history-details-refactor"},"event name")," for clearer context and grouping."))}m.isMDXComponent=!0}}]);