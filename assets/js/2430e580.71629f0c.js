"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[1253],{91198:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=o(87462),n=(o(67294),o(3905));o(8209);const a={title:"0037 Put mymove outside of standard GOPATH",description:"Decision outcome: Move repository outside of $GOPATH and explicitly set GO111MODULE=auto.\n"},r="Put mymove outside of standard GOPATH",s={unversionedId:"adrs/go-path-and-project-layout-revisited",id:"adrs/go-path-and-project-layout-revisited",title:"0037 Put mymove outside of standard GOPATH",description:"Decision outcome: Move repository outside of $GOPATH and explicitly set GO111MODULE=auto.\n",source:"@site/docs/adrs/0037-go-path-and-project-layout-revisited.md",sourceDirName:"adrs",slug:"/adrs/go-path-and-project-layout-revisited",permalink:"/mymove-docs/docs/adrs/go-path-and-project-layout-revisited",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/adrs/0037-go-path-and-project-layout-revisited.md",tags:[],version:"current",sidebarPosition:37,frontMatter:{title:"0037 Put mymove outside of standard GOPATH",description:"Decision outcome: Move repository outside of $GOPATH and explicitly set GO111MODULE=auto.\n"},sidebar:"adrsSidebar",previous:{title:"0036 Use Separate Integration Package for Go Integration Tests",permalink:"/mymove-docs/docs/adrs/go-integration"},next:{title:"0038 Use Soft Delete Instead of Hard Delete",permalink:"/mymove-docs/docs/adrs/soft-delete"}},l={},d=[{value:"Considered Alternatives",id:"considered-alternatives",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Pros and Cons of the Alternatives",id:"pros-and-cons-of-the-alternatives",level:2},{value:"Maintain direction of ADR0003 and keep repository checkout inside <code>$GOPATH</code> with <code>GO111MODULE=on</code>",id:"maintain-direction-of-adr0003-and-keep-repository-checkout-inside-gopath-with-go111moduleon",level:3},{value:"Move repository outside of <code>$GOPATH</code> with <code>GO111MODULE=auto</code>",id:"move-repository-outside-of-gopath-with-go111moduleauto",level:3},{value:"Resources",id:"resources",level:2}],p={toc:d},m="wrapper";function u(e){let{components:t,...o}=e;return(0,n.kt)(m,(0,i.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"put-mymove-outside-of-standard-gopath"},"Put mymove outside of standard GOPATH"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"NOTE:")," This ADR updates and supersedes ",(0,n.kt)("a",{parentName:"p",href:"/mymove-docs/docs/adrs/go-path-and-project-layout"},"ADR0003 Go Path and Project Layout"),"."),(0,n.kt)("p",null,"MilMove adopted using the go module system as introduction in ",(0,n.kt)("inlineCode",{parentName:"p"},"go1.12")," in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/pull/1932"},"PR 1932"),".\nThis gave us the option of continuing to host our repository inside of ",(0,n.kt)("inlineCode",{parentName:"p"},"$GOPATH")," or outside of ",(0,n.kt)("inlineCode",{parentName:"p"},"$GOPATH")," and per\n",(0,n.kt)("a",{parentName:"p",href:"/mymove-docs/docs/adrs/go-path-and-project-layout"},"ADR0003 Go Path and Project Layout")," the decision was to stay in ",(0,n.kt)("inlineCode",{parentName:"p"},"$GOPATH")," and\nset the environment variable ",(0,n.kt)("inlineCode",{parentName:"p"},"GO111MODULE=on")," as a way of forcing go module behavior."),(0,n.kt)("p",null,"This choice had implications for other tools that the project uses like ",(0,n.kt)("inlineCode",{parentName:"p"},"pre-commit")," hooks that use golang libraries.  As seen in\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/pull/2236"},"PR 2236")," the interaction made it impossible to develop the project and\nthus people set ",(0,n.kt)("inlineCode",{parentName:"p"},"GO111MODULE=auto")," and were asked to move their repository outside of ",(0,n.kt)("inlineCode",{parentName:"p"},"$GOPATH"),". This also\nbrings the local development inline with our CI/CD pipeline choices as modified in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/pull/2172"},"PR 2172"),"."),(0,n.kt)("h2",{id:"considered-alternatives"},"Considered Alternatives"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Maintain direction of ADR0003 and keep repository checkout inside ",(0,n.kt)("inlineCode",{parentName:"li"},"$GOPATH")," with ",(0,n.kt)("inlineCode",{parentName:"li"},"GO111MODULE=on")),(0,n.kt)("li",{parentName:"ul"},"Move repository outside of ",(0,n.kt)("inlineCode",{parentName:"li"},"$GOPATH")," with ",(0,n.kt)("inlineCode",{parentName:"li"},"GO111MODULE=auto"))),(0,n.kt)("h2",{id:"decision-outcome"},"Decision Outcome"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Move repository outside of ",(0,n.kt)("inlineCode",{parentName:"li"},"$GOPATH")," and explicitly set ",(0,n.kt)("inlineCode",{parentName:"li"},"GO111MODULE=auto"),"."),(0,n.kt)("li",{parentName:"ul"},"Falls inline with best practices for golang going forward while allowing compatibility with dependencies not ready for go modules"),(0,n.kt)("li",{parentName:"ul"},"Forces everyone to move their directories or be unable to develop.")),(0,n.kt)("h2",{id:"pros-and-cons-of-the-alternatives"},"Pros and Cons of the Alternatives"),(0,n.kt)("h3",{id:"maintain-direction-of-adr0003-and-keep-repository-checkout-inside-gopath-with-go111moduleon"},"Maintain direction of ADR0003 and keep repository checkout inside ",(0,n.kt)("inlineCode",{parentName:"h3"},"$GOPATH")," with ",(0,n.kt)("inlineCode",{parentName:"h3"},"GO111MODULE=on")),(0,n.kt)("p",null,"Inside of ",(0,n.kt)("inlineCode",{parentName:"p"},"GOPATH")," it is necessary to set ",(0,n.kt)("inlineCode",{parentName:"p"},"GO111MODULE=on")," to force go module support. One example where\nthis causes issues is that ",(0,n.kt)("inlineCode",{parentName:"p"},"pre-commit")," is not installing its hooks into the ",(0,n.kt)("inlineCode",{parentName:"p"},"$GOPATH")," but instead into ",(0,n.kt)("inlineCode",{parentName:"p"},"~/.cache/pre-commit"),".\nThe effect is that golang modules installed by ",(0,n.kt)("inlineCode",{parentName:"p"},"pre-commit")," think that they are inside of ",(0,n.kt)("inlineCode",{parentName:"p"},"$GOPATH")," when they are not\nand that causes bad interaction issues with the tool itself."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"+")," No changes needed to repository location"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"-")," Installation of ",(0,n.kt)("inlineCode",{parentName:"li"},"pre-commit")," hooks that use golang will fail if ",(0,n.kt)("inlineCode",{parentName:"li"},"GO111MODULE=on")," is set in the environment"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"-")," Golang dependencies need to be ready to use go modules or installation doesn't work"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"-")," Not in line with CI/CD setup which does not uses ",(0,n.kt)("inlineCode",{parentName:"li"},"auto")," mode")),(0,n.kt)("h3",{id:"move-repository-outside-of-gopath-with-go111moduleauto"},"Move repository outside of ",(0,n.kt)("inlineCode",{parentName:"h3"},"$GOPATH")," with ",(0,n.kt)("inlineCode",{parentName:"h3"},"GO111MODULE=auto")),(0,n.kt)("p",null,"Outside of the ",(0,n.kt)("inlineCode",{parentName:"p"},"GOPATH")," it is not necessary to set ",(0,n.kt)("inlineCode",{parentName:"p"},"GO111MODULE=auto")," as it is the default. However, being explicit\nis better than implicit and ",(0,n.kt)("inlineCode",{parentName:"p"},".envrc")," will override whatever developers set globally in their environments."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"+")," Installation of ",(0,n.kt)("inlineCode",{parentName:"li"},"pre-commit")," hooks that use golang will not fail"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"+")," Installation of dependencies that do not support go modules will not fail"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"+")," Prepared for future roll out of ",(0,n.kt)("inlineCode",{parentName:"li"},"go1.13")," and future changes"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"+")," In line with CI/CD setup which does not uses ",(0,n.kt)("inlineCode",{parentName:"li"},"auto")," mode"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"-")," Must change repository location outside of ",(0,n.kt)("inlineCode",{parentName:"li"},"$GOPATH"))),(0,n.kt)("h2",{id:"resources"},"Resources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/golang/go/wiki/Modules"},"Go Modules")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/golang/go/wiki/Modules#when-do-i-get-old-behavior-vs-new-module-based-behavior"},"Old behavior vs New behavior"))))}u.isMDXComponent=!0}}]);