"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[2924],{84940:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var n=o(87462),i=(o(67294),o(3905));o(8209);const a={},s="Front End Linter",r={unversionedId:"tools/cicd/github_actions/front-end-linter",id:"tools/cicd/github_actions/front-end-linter",title:"Front End Linter",description:"Configuration",source:"@site/docs/tools/cicd/github_actions/front-end-linter.md",sourceDirName:"tools/cicd/github_actions",slug:"/tools/cicd/github_actions/front-end-linter",permalink:"/mymove-docs/docs/tools/cicd/github_actions/front-end-linter",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/tools/cicd/github_actions/front-end-linter.md",tags:[],version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"Auto Approve",permalink:"/mymove-docs/docs/tools/cicd/github_actions/auto-approve"},next:{title:"Go Auto Approve",permalink:"/mymove-docs/docs/tools/cicd/github_actions/go-auto-approve"}},l={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Purpose",id:"purpose",level:2},{value:"Additional Notes",id:"additional-notes",level:2}],c={toc:d},u="wrapper";function p(t){let{components:e,...o}=t;return(0,i.kt)(u,(0,n.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"front-end-linter"},"Front End Linter"),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The front end linters are configured to run based off of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/blob/main/.github/workflows/front-end-linter.yml"},(0,i.kt)("inlineCode",{parentName:"a"},"front-end-linter.yml")),". Those linters are configured inside of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/blob/main/.eslintrc.js"},(0,i.kt)("inlineCode",{parentName:"a"},".eslint.rc"))," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/blob/main/.eslintignore"},(0,i.kt)("inlineCode",{parentName:"a"},".eslintignore")),"."),(0,i.kt)("h2",{id:"purpose"},"Purpose"),(0,i.kt)("p",null,"This GitHub Action checks the frontend code to assure that it is adhering to the rules outlined inside of ",(0,i.kt)("inlineCode",{parentName:"p"},".eslintrc.js"),". These rules help flag possible bugs and stylistic errors."),(0,i.kt)("h2",{id:"additional-notes"},"Additional Notes"),(0,i.kt)("p",null,"While most of the rules are pulled from other packages, a few rules are custom written. Most notable of these is the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/blob/main/eslint-plugin-ato/no-unapproved-annotation.js"},(0,i.kt)("inlineCode",{parentName:"a"},"ato/no-unapproved-annotation"))," rule, which relates to the static analysis workflow.\nFurther information on static analysis can be found in our ",(0,i.kt)("a",{parentName:"p",href:"https://dp3.atlassian.net/wiki/spaces/MT/pages/1921384494/Static+Analysis"},"Guides to Static Analysis")))}p.isMDXComponent=!0}}]);